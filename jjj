from typing import Final
import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

TOKEN: Final = '6627795045:AAHaYLTSF5DKbVqVWdkU6m62Mm_u22npjQg'
BOT_USERNAME: Final = '@joyfuldragonbot'


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("I am JoyfulDragonBot, your Crypto Laughter Companion. " \
                                    "Start your day with a joke. Type /joke and let the laughter unfold." \
                                    "Explore more commands to embrace the joy of crypto comedy!")

async def tell_joke(update: Update, context : ContextTypes.DEFAULT_TYPE):
    user_name = update. message.from_user.first_name

    # Fetch a random crypto joke from the Official Joke API
    joke_api_url = 'https://official-joke-api.appspot.com/jokes/crypto'
    response = requests.get(joke_api_url)

    if response.status_code == 200:
        joke_data = response.json()
        joke_question = joke_data.get('setup', '')
        joke_answer = joke_data.get('delivery', '')
        joke_message = f"Hey {user_name}, here's a crypto joke for you:\n\n"\
                       f"Q: {joke_question}\n"\
                       f"A: {joke_answer}\n\n"\
                       "Hope it brings a smile to your face! 😄🐉"
        await update.message.reply_text(joke_message)
    else:
        await update.message.reply_text("Oops! Something went wrong. Couldn't fetch a joke this time. Try again later!")



#response
def handle_response(text: str) -> str:
    processed: str = text.lower()

    if 'hello' in processed:
        return 'hey smiley'

    if 'kirubro' in processed:
        return 'dai ultra bot kiruba '

    if 'deshwinbro' in processed:
        return 'how are you bro'

    return'i dont understand what you wrote'


async  def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message_type: str = update.message.chat.type
    text: str = update.message.text

    print(f'User({update.message.chat.id}) in {message_type}: "{text}"')


    if message_type == "group":
        if BOT_USERNAME in text:
            new_text: str = text.replace(BOT_USERNAME,'').Strip()
            response = handle_response(new_text)
        else:
             return
    else:
         response: str = handle_response(text)

    print('Bot:',response)
    await update.message.reply_text(response)



async def error(update: Update, context: ContextTypes.DEFAULT_TYPE):
    print(f'Update {update} caused error {context.error}')


if _name_ == '_main_':
    print('starting to smile')
    app = Application.builder().token(TOKEN).build()
#cmds
    app.add_handler(CommandHandler('start', start_command))
    app.add_handler(CommandHandler('joke', tell_joke))


    #msgs
    app.add_handler(MessageHandler(filters.TEXT, handle_message))


    #errs
    app.add_error_handler(error)

    #polls the bot
    print('polling...')
    app.run_polling(poll_interval=3)
